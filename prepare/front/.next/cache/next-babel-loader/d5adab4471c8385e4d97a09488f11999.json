{"ast":null,"code":"var _jsxFileName = \"/Users/chae/Desktop/\\u1100\\u1161\\u11BC\\u110B\\u1174/\\uC81C\\uB85C\\uCD08/[\\u1105\\u1175\\u1102\\u1172\\u110B\\u1165\\u11AF] React\\u1105\\u1169 NodeBird SNS \\u1106\\u1161\\u11AB\\u1103\\u1173\\u11AF\\u1100\\u1175/react-nodebird-practice/prepare/front/components/PostCard.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { HeartOutlined, MessageOutlined, RetweetOutlined, EllipsisOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { Card, Popover, Button } from \"antd\";\nimport React, { useState, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Avatar } from \"antd\";\nimport PostImages from \"./PostImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); // 옵셔널체이닝\n  // === (state.user.me && state.user.me.id)\n\n  var _useState = useState(false),\n    liked = _useState[0],\n    setLiked = _useState[1];\n  var _useState2 = useState(false),\n    commentFormOpened = _useState2[0],\n    setCommentFormOpened = _useState2[1];\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    }); // false를 true로 true를 false로\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        Images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 34\n      }, _this),\n      actions: [\n      /*#__PURE__*/\n      // 배열안에 jsx를 넣을때는 항상 key를 넣어주기\n      _jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"red\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB313\\uAE00 \\uBD80\\uBD84\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n_s(PostCard, \"TDWGRGH9sEmk3O3m4fnWhihQZFs=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  // 데이터의 모양대로\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["HeartOutlined","MessageOutlined","RetweetOutlined","EllipsisOutlined","HeartTwoTone","Card","Popover","Button","React","useState","useCallback","useSelector","PropTypes","Avatar","PostImages","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"sources":["/Users/chae/Desktop/강의/제로초/[리뉴얼] React로 NodeBird SNS 만들기/react-nodebird-practice/prepare/front/components/PostCard.js"],"sourcesContent":["import {\n  HeartOutlined,\n  MessageOutlined,\n  RetweetOutlined,\n  EllipsisOutlined,\n  HeartTwoTone,\n} from \"@ant-design/icons\";\nimport { Card, Popover, Button } from \"antd\";\nimport React, { useState, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Avatar } from \"antd\";\nimport PostImages from \"./PostImages\";\n\nconst PostCard = ({ post }) => {\n  const id = useSelector((state) => state.user.me?.id); // 옵셔널체이닝\n  // === (state.user.me && state.user.me.id)\n\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev); // false를 true로 true를 false로\n  }, []);\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  return (\n    <div>\n      <Card\n        cover={post.Images[0] && <PostImages Images={post.Images} />}\n        actions={[\n          // 배열안에 jsx를 넣을때는 항상 key를 넣어주기\n          <RetweetOutlined key=\"retweet\" />,\n          liked ? (\n            <HeartTwoTone\n              twoToneColor=\"red\"\n              key=\"heart\"\n              onClick={onToggleLike}\n            />\n          ) : (\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\n          ),\n\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {/* 내 id가 게시글 작성자 id와 같으면 수정 삭제 가능  */}\n                {id && post.User.id === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n        />\n        {/* <Content /> */}\n      </Card>\n      {commentFormOpened && <div>댓글 부분</div>}\n      {/* <CommentForm /> */}\n      {/* <Comments /> */}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  // 데이터의 모양대로\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}