{"ast":null,"code":"// import React, { useCallback, useState, useMemo } from \"react\";\n// import { Form, Input, Button } from \"antd\";\n// import Link from \"next/link\";\n// import styled from \"styled-components\"; //styled-components로 리렌더링 최소화\n\n// const ButtonWrapper = styled.div`\n//   margin-top: 10px;\n// `;\n\n// const FormWrapper = styled(Form)`\n//   padding: 20px;\n// `;\n\n// const Loginform = ({ setIsLoggedIn }) => {\n//   const [id, setId] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [passwordCheck, setPasswordCheck] = useState(\"\");\n\n//   const onChangeId = useCallback((e) => {\n//     // props로 전달할때는 꼭 useCallback 사용하자 (최적화를 위해서)\n//     setId(e.target.value);\n//   }, []);\n\n//   const onChangePassword = useCallback((e) => {\n//     // props로 전달할때는 꼭 useCallback 사용하자 (최적화를 위해서)\n//     setPassword(e.target.value);\n//   }, []);\n\n//   const style = useMemo(() => ({ marginTop: 10 }), []); // 리렌더링돼도 같은 객체 유지(리렌더링 최적화)\n\n//   const onSubmitForm = useCallback(() => {\n//     // antd에서는 onFinish로 자동으로 e.preventDefault가 적용됨\n//     console.log(id, password);\n//     setIsLoggedIn(true); // 로그인 되면 true로 바뀜\n//   }, [id, password]);\n\n//   return (\n//     <FormWrapper onFinish={onSubmitForm} >\n//       {/* onFinish는 자동으로 e.preventDefault가 적용 됨  */}\n//       <div>\n//         <label htmlFor=\"user-id\">아이디</label>\n//         <br />\n//         <Input name=\"user-id\" value={id} onChange={onChangeId} required />\n//       </div>\n//       <div>\n//         <label htmlFor=\"user-password\">비밀번호</label>\n//         <br />\n//         <Input\n//           name=\"user-password\"\n//           type=\"password\"\n//           value={password}\n//           onChange={onChangePassword}\n//           required\n//         />\n//       </div>\n//       <ButtonWrapper style={style}>\n//         <Button type=\"primary\" htmlType=\"submit\" loading={false}>\n//           로그인\n//         </Button>\n//         <Link href=\"/signup\">\n//           <a>\n//             <Button>회원가입</Button>\n//           </a>\n//           {/* href는 Link에만 넣고 a태그에는 넣지않기  */}\n//         </Link>\n//       </ButtonWrapper>\n//     </FormWrapper>\n//   );\n// };\n// export default Loginform;","map":{"version":3,"names":[],"sources":["/Users/chae/Desktop/강의/제로초/[리뉴얼] React로 NodeBird SNS 만들기/react-nodebird-practice/prepare/front/components/Loginform.js"],"sourcesContent":["// import React, { useCallback, useState, useMemo } from \"react\";\n// import { Form, Input, Button } from \"antd\";\n// import Link from \"next/link\";\n// import styled from \"styled-components\"; //styled-components로 리렌더링 최소화\n\n// const ButtonWrapper = styled.div`\n//   margin-top: 10px;\n// `;\n\n// const FormWrapper = styled(Form)`\n//   padding: 20px;\n// `;\n\n// const Loginform = ({ setIsLoggedIn }) => {\n//   const [id, setId] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [passwordCheck, setPasswordCheck] = useState(\"\");\n\n//   const onChangeId = useCallback((e) => {\n//     // props로 전달할때는 꼭 useCallback 사용하자 (최적화를 위해서)\n//     setId(e.target.value);\n//   }, []);\n\n//   const onChangePassword = useCallback((e) => {\n//     // props로 전달할때는 꼭 useCallback 사용하자 (최적화를 위해서)\n//     setPassword(e.target.value);\n//   }, []);\n\n//   const style = useMemo(() => ({ marginTop: 10 }), []); // 리렌더링돼도 같은 객체 유지(리렌더링 최적화)\n\n//   const onSubmitForm = useCallback(() => {\n//     // antd에서는 onFinish로 자동으로 e.preventDefault가 적용됨\n//     console.log(id, password);\n//     setIsLoggedIn(true); // 로그인 되면 true로 바뀜\n//   }, [id, password]);\n\n//   return (\n//     <FormWrapper onFinish={onSubmitForm} >\n//       {/* onFinish는 자동으로 e.preventDefault가 적용 됨  */}\n//       <div>\n//         <label htmlFor=\"user-id\">아이디</label>\n//         <br />\n//         <Input name=\"user-id\" value={id} onChange={onChangeId} required />\n//       </div>\n//       <div>\n//         <label htmlFor=\"user-password\">비밀번호</label>\n//         <br />\n//         <Input\n//           name=\"user-password\"\n//           type=\"password\"\n//           value={password}\n//           onChange={onChangePassword}\n//           required\n//         />\n//       </div>\n//       <ButtonWrapper style={style}>\n//         <Button type=\"primary\" htmlType=\"submit\" loading={false}>\n//           로그인\n//         </Button>\n//         <Link href=\"/signup\">\n//           <a>\n//             <Button>회원가입</Button>\n//           </a>\n//           {/* href는 Link에만 넣고 a태그에는 넣지않기  */}\n//         </Link>\n//       </ButtonWrapper>\n//     </FormWrapper>\n//   );\n// };\n// export default Loginform;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script"}